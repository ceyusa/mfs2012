/*** BEGIN file-header ***/
/* -*- Mode: C; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/*
 * Mex - Media Explorer
 *
 * Copyright Â© 2010 Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU Lesser General Public License,
 * version 2.1, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses>
 *
 * Author:
 *   Damien Lespiau <damien.lespiau@intel.com>
 */

#include "gt-enum-types.h"

const gchar *
gt_enum_to_string (GType type, gint  value)
{
    GEnumClass *enum_class;
    GEnumValue *enum_value;
    const gchar *val;

    enum_class = g_type_class_ref (type);
    enum_value = g_enum_get_value (enum_class, value);
    if (enum_value)
        val = enum_value->value_nick;
    else
        val = "<invalid enum value>";

    g_type_class_unref (enum_class);

    return val;
}

gboolean
gt_string_to_enum (GType type, const gchar *nick, gint *value)
{
    GEnumClass *enum_class;
    GEnumValue *enum_value;
    gboolean ret = FALSE;

    enum_class = g_type_class_ref (type);
    enum_value = g_enum_get_value_by_nick (enum_class, nick);
    if (enum_value) {
        if (value)
            *value = enum_value->value;
        ret = TRUE;
    }

    g_type_class_unref (enum_class);

    return ret;
}

/*** END file-header ***/

/*** BEGIN file-production ***/

/* enumerations from "@filename@" */
#include "@filename@"
/*** END file-production ***/

/*** BEGIN value-header ***/
GType
@enum_name@_get_type (void)
{
  static volatile gsize g_enum_type_id__volatile = 0;

  if (g_once_init_enter (&g_enum_type_id__volatile))
    {
      static const G@Type@Value values[] = {
/*** END value-header ***/

/*** BEGIN value-production ***/
        { @VALUENAME@, "@VALUENAME@", "@valuenick@" },
/*** END value-production ***/

/*** BEGIN value-tail ***/
        { 0, NULL, NULL }
      };
      GType g_enum_type_id;

      g_enum_type_id =
        g_@type@_register_static (g_intern_static_string ("@EnumName@"), values);
      g_once_init_leave (&g_enum_type_id__volatile, g_enum_type_id);
    }

  return g_enum_type_id__volatile;
}
/*** END value-tail ***/
